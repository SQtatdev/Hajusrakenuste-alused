from flask import Flask, request
import json

# Создаем Flask приложение
app = Flask(__name__)

# Константа с названиями колонок файла
HEADERS = [
    "sn", "name", "Column3", "Column4", "Column5", 
    "Column6", "Column7", "Column8", "price", "brand", "Column11"
]

def read_file_data():
    """Читает данные из файла и возвращает список строк"""
    try:
        with open('LE.txt', 'r', encoding='ISO-8859-1') as file:
            return file.readlines()
    except FileNotFoundError:
        return None

@app.route('/')
def index():
    """Главная страница - показывает содержимое файла как есть"""
    if (data := read_file_data()) is not None:
        return f"<pre>{''.join(data)}</pre>"
    return "Файл не найден. Убедитесь, что LE.txt существует."

@app.route('/json/spare-parts', methods=['GET'])
def file_to_json():
    """
    API endpoint:
    - Читает данные из файла
    - Конвертирует в JSON
    - Фильтрует по параметрам запроса
    - Возвращает отформатированный JSON
    """
    # 1. Чтение данных из файла
    if (lines := read_file_data()) is None:
        return "Файл не найден.", 404
    
    json_data = []
    
    # 2. Обработка каждой строки файла
    for line in lines:
        # Разделяем строку по табуляции и очищаем от лишних символов
        values = [v.strip('"') for v in line.strip().split("\t")]
        
        # Проверяем что количество элементов соответствует заголовкам
        if len(values) == len(HEADERS):
            # Создаем словарь {заголовок: значение}
            json_data.append(dict(zip(HEADERS, values)))
    
    # 3. Фильтрация по параметрам запроса
    if (name_filter := request.args.get('name')):
        # Регистронезависимый поиск по части имени
        json_data = [item for item in json_data 
                    if name_filter.lower() in item['name'].lower()]
    
    if (sn_filter := request.args.get('sn')):
        # Точный поиск по серийному номеру
        json_data = [item for item in json_data 
                    if sn_filter == item['sn']]
    
    # 4. Форматирование результата в красивый JSON
    json_output = json.dumps(json_data, indent=2, ensure_ascii=False)
    
    return f"<pre>{json_output}</pre>"

if __name__ == '__main__':
    # Запуск сервера с автоматической перезагрузкой при изменениях
    app.run(debug=True)
